{%- liquid
  if section.settings.show_continue_shopping and cart.items != empty
    if section.settings.continue_shopping_url != blank
      assign continue_shopping_url = section.settings.continue_shopping_url
    else
      assign continue_shopping_url = routes.all_products_collection_url
      for item in cart.items
        for collection in item.product.collections
          unless collection.handle == 'all' or collection.handle == 'frontpage'
            assign continue_shopping_url = collection.url
            assign csurl_found = true
            break
          endunless
        endfor
        if csurl_found
          break
        endif
      endfor
    endif
  endif

  # This one is for custom event products
  # Remove this completely not to use the flag
  assign has_event_service = false
  for item in cart.items
    for collection in item.product.collections
      # Replace with an arr of collections
      if collection.handle == "decoracion-de-eventos"
        assign has_event_service = true
      endif
    endfor
  endfor
-%}

{% comment %} Sample custom event flag implementation
{% if has_event_service %}
  <div class="event-flag">Hello World</div>
{% endif %} 
{% endcomment %}

{%- if section.settings.show_order_note -%}
  <script src="{{ 'cart-note.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

<div class="container fully-spaced-row" data-ajax-update="true" style="--page-container-width: {{ settings.max_page_width | at_most: 1200 }}px;">
  <cart-form data-section-id="{{ section.id }}" data-ajax-update="true">
    {% if section.settings.show_page_title %}
      <div data-merge="page-heading" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
        {%- if cart.items != empty -%}
          <div class="page-header">
            <h1 class="majortitle">{{ 'cart.general.title' | t }}</h1>
          </div>
        {%- endif -%}
      </div>
    {% endif %}

    {%- if settings.show_free_shipping_bar -%}
      <div class="slim-container align-center" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
        {%- render 'free-shipping-bar' -%}
      </div>
    {%- endif -%}

    <form action="{{ routes.cart_url }}" method="post" id="cartform" class="cart-form">
      <div class="cart-item-list">
        <div class="cart-item-list__body" data-merge-list="cart-items">
          {% if cart.items != empty %}
            <div data-merge-list-item="item-key:head">
              <div class="cart-item-list__head" aria-hidden="true" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
                <div class="cart-item-list-heading cart-item-list-heading--product">{{ 'cart.items.product' | t }}</div>
                <div class="cart-item-list-heading cart-item-list-heading--price">{{ 'cart.items.price' | t }}</div>
                <div class="cart-item-list-heading cart-item-list-heading--quantity">{{ 'cart.items.quantity' | t }}</div>
                <div class="cart-item-list-heading cart-item-list-heading--total">{{ 'cart.items.total' | t }}</div>
              </div>
            </div>
          {% else %}
            <div data-merge-list-item="item-key:empty" >
              <div class="fully-spaced-row--large align-centre" {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
                <div class="align-center">
                  {%- if section.settings.empty_icon == 'basket' -%}
                    <div class="lightly-spaced-row"><span class="icon--large">{%- render 'icon-basket' -%}</span></div>
                  {%- elsif section.settings.empty_icon == 'bag' -%}
                    <div class="lightly-spaced-row"><span class="icon--large">{%- render 'icon-bag' -%}</span></div>
                  {%- elsif section.settings.empty_icon == 'cart' -%}
                    <div class="lightly-spaced-row"><span class="icon--large">{%- render 'icon-cart' -%}</span></div>
                  {%- endif -%}

                  {%- if section.settings.empty_heading != blank -%}
                    <h1 class="majortitle">{{ section.settings.empty_heading }}</h1>
                  {%- endif -%}

                  {%- if section.settings.empty_text != blank -%}
                    <div class="rte">{{ section.settings.empty_text }}</div>
                  {%- endif -%}

                  {%- if section.settings.empty_button_text != blank -%}
                    <div class="button-row">
                      <a class="{% if section.settings.empty_button_style != 'link' %}btn btn--{{ section.settings.empty_button_style }}{% else %}small-feature-link{% endif %} button-row__btn" href="{{ section.settings.empty_button_link }}">{{ section.settings.empty_button_text | escape }}</a>
                    </div>
                  {%- endif -%}
                </div>
              </div>
            </div>
          {% endif %}

          {% for item in cart.items %}
            <div data-merge-list-item="item-key:{{ item.key }}|{{ item.final_price }}{% for discount_allocation in item.line_level_discount_allocations %}|{{ discount_allocation.discount_application.title | escape }}{% endfor %}"
                {% comment %} Discount items are difficult to predict - BOGOFs appear as a separate item with the same key as an existing item - simpler to always refresh {% endcomment %}
                {%- if item.line_level_discount_allocations == empty -%}
                data-merge-cache="{{ item.key }}|{{ item.quantity }}|{{ item.final_line_price }}|{% if item.selling_plan_allocation %}{{ item.selling_plan_allocation.selling_plan.id }}{% endif %}"
                {%- endif -%}>
              {%- render 'cart-item', item: item, forloop: forloop, animate: true -%}
            </div>
          {% endfor %}
        </div>
      </div>

      <div {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
        <div class="checkout-subtotal-container spaced-row{% if cart.items == empty %} hidden{% endif %}" data-merge-attributes="subtotal-container">
          <div class="flexible-layout">
            <div class="checkout-subtotal-container__left column column--half">
              {% comment %}
              Show the original cart note UNLESS the custom event service is active.
              {% endcomment %}
              {% if section.settings.show_order_note and has_event_service == false %}
                <cart-note class="cart-note block lightly-spaced-row">
                  <label class="block" for="note">{{ 'cart.note.label' | t }}</label>
                  <textarea id="note" name="note">{{ cart.note }}</textarea>
                </cart-note>
              {% endif %}

              {% comment %}
              Add the custom field "Full Name" ONLY when the custom event service is active.
              The input name "attributes[Full Name]" will save the value as a cart attribute.
              {% endcomment %}
              
              {% if has_event_service %}
                <h6 style="font-size: 16px;">Dejanos información sobre tu evento y te vamos a contactar</h6>
                <hr>
                <div class="cart-note block lightly-spaced-row">
                  <label class="block" for="custom-full-name">Tu nombre y apellido</label>
                  <input 
                    style="width: 100% !important;"  
                    type="text" 
                    id="custom-full-name" 
                    name="attributes[Full Name]" 
                    value="" 
                    placeholder="Tu nombre y apellido" 
                    required>
                </div>
                
                <div class="cart-note block lightly-spaced-row">
                  <label class="block" for="custom-phone">Tu número de teléfono</label>
                  <input 
                    style="width: 100% !important;"  
                    type="tel" 
                    id="custom-phone" 
                    name="attributes[Phone Number]" 
                    value="" 
                    placeholder="e.g., 1234567890" 
                    pattern="^[0-9\s\-\(\)]{7,20}$" 
                    title="Tu número de teléfono" 
                    required>
                </div>

                <div class="cart-note block lightly-spaced-row">
                  <label class="block" for="custom-email">Tu correo electrónico</label>
                  <input 
                    style="width: 100% !important;"  
                    type="email" 
                    id="custom-email" 
                    name="attributes[Email Address]" 
                    value="" 
                    placeholder="Tu correo electrónico" 
                    required>
                </div>

                <div class="cart-note block lightly-spaced-row">
                  <label class="block" for="custom-date">Fecha del evento</label>
                  <input 
                    style="width: 100% !important;"  
                    type="date" 
                    id="custom-date" 
                    name="attributes[Preferred Date]" 
                    value="" 
                    required>
                </div>

                <div class="cart-note block lightly-spaced-row">
                  <label class="block" for="custom-address">Dirección completa del evento</label>
                  <input 
                    style="width: 100% !important;"  
                    type="text" 
                    id="custom-address" 
                    name="attributes[Address]" 
                    value="" 
                    placeholder="Dirección completa del evento" 
                    required>
                </div>
                
                <cart-note class="cart-note block lightly-spaced-row">
                  <label class="block" for="note">Déjanos tu comentario sobre el evento</label>
                  <textarea id="note" name="note" style="width: 100% !important;"></textarea>
                </cart-note>
                
              {% endif %}

              {% if section.settings.show_shipping_calculator %}
                <toggle-target class="block lightly-spaced-row link underline" role="button" tabindex="0" data-toggle-target="#{{ section.id }}-shipping-calculator-container" data-toggle-close-label="{{ 'cart.shipping_calculator.hide' | t }}">{{ 'cart.shipping_calculator.show' | t }}</toggle-target>
                <div id="{{ section.id }}-shipping-calculator-container" class="toggle-target toggle-target--hidden">
                  <div class="toggle-target-container">
                    {%- render 'shipping-calculator', id: section.id, default_country: section.settings.shipping_calculator_default_country -%}
                  </div>
                </div>
              {% endif %}
            </div>
            <div class="checkout-subtotal-container__right column column--half">
              <div data-merge="total">
                {%- if cart.cart_level_discount_applications != blank -%}
                  <ul class="cart-discount-list">
                    {%- for discount_application in cart.cart_level_discount_applications -%}
                      <li class="cart-discount cart-discount--inline">
                        <span class="cart-discount__label">
                            <span class="cart-discount__icon">{% render 'icon-label' %}</span>
                            <span class="cart-discount__title">{{ discount_application.title | escape_once }}</span>
                        </span>
                        <span class="cart-discount__amount theme-money">{{ discount_application.total_allocated_amount | money }}</span>
                      </li>
                    {%- endfor -%}
                  </ul>
                {%- endif -%}

                <h2 class="subtotal h2">
                  {{ 'cart.summary.subtotal' | t }}:
                  <span class="theme-money">
                    {%- if settings.cart_currency_code_enabled -%}
                      {{- cart.total_price | money_with_currency -}}
                    {%- else -%}
                      {{- cart.total_price | money -}}
                    {%- endif -%}
                  </span>
                </h2>

                {%- if section.settings.show_tax_and_shipping -%}
                  <div class="cart-policies rte">
                    {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                      {{- 'cart.general.taxes_included_shipping_at_checkout_html' | t: link: shop.shipping_policy.url -}}
                    {%- elsif cart.taxes_included -%}
                      {{- 'cart.general.taxes_included_shipping_at_checkout' | t -}}
                    {%- elsif shop.shipping_policy.body != blank -%}
                      {{- 'cart.general.taxes_and_shipping_at_checkout_html' | t: link: shop.shipping_policy.url -}}
                    {%- else -%}
                      {{- 'cart.general.taxes_and_shipping_at_checkout' | t -}}
                    {%- endif -%}
                  </div>
                {%- endif -%}
              </div>

              {% if section.settings.cart_terms_page != blank %}
                <terms-agreement class="terms-agreement rte">
                  <input type="checkbox" id="terms" />
                  <label for="terms">{{ 'cart.terms.agreement_html' | t: terms_url: section.settings.cart_terms_page }}</label>
                </terms-agreement>
              {% endif %}

              <div class="checkout-col">
                <div class="checkout-buttons">
                  <span class="update-cart-container">
                    <button type="submit" name="update">{{ 'cart.general.update' | t }}</button>
                  </span>
                  
                  {%- comment -%}
                    Conditional checkout button:
                    - If there is an event service, the button redirects to a custom page.
                    - Otherwise, it submits to the standard Shopify checkout.
                  {%- endcomment -%}


                  {% if has_event_service %}
                    {%- comment -%}
                      NOTE: Change 'thank-you-page' to the handle of your custom Shopify page.
                    {%- endcomment -%}
                    <button type="submit" class="identixweb_checkout btn btn--large" id="custom-request" name="custom-request" disabled>Cotizar</button>
                  {% else %}
                    <button type="submit" class="identixweb_checkout btn btn--large" id="update-cart" name="checkout" disabled>{{ 'cart.summary.checkout' | t }}</button>
                  {% endif %}

                  {% if section.settings.show_additional_checkout_buttons and additional_checkout_buttons and section.settings.cart_terms_page == blank %}
                  <div class="additional-checkout-buttons mt-2">
                    {{ content_for_additional_checkout_buttons }}
                  </div>
                  {% endif %}
                </div>

                {%- if section.settings.show_continue_shopping -%}
                  <a class="continue-shopping underline block lightly-spaced-row-above" href="{{ continue_shopping_url }}">{{ 'cart.summary.continue_shopping' | t }}</a>
                {%- endif -%}
              </div>
            </div>
          </div>
        </div>
      </div>
    </form>
  </cart-form>
</div>

<script> 
  document.addEventListener('DOMContentLoaded', function() { 
    const customRequestButton = document.getElementById('custom-request');
    const form = document.getElementById('cartform');
    if (customRequestButton) {
      customRequestButton.addEventListener('click', async function(event) { 
        if (!form.checkValidity()) {
          // If the form is NOT valid, do nothing and let the browser's native UI handle it.
          console.log('invalid'); 
          return;
        }
        event.preventDefault();

        // Show loading feedback
        const originalButtonText = customRequestButton.textContent; 
        customRequestButton.disabled = true; 
        customRequestButton.textContent = 'Sending request...'; 

        try { 
          // Collect form data
          const fullNameField = document.getElementById('custom-full-name'); 
          const addressField = document.getElementById('custom-address'); 
          const phoneField = document.getElementById('custom-phone'); 
          const emailField = document.getElementById('custom-email'); 
          const dateField = document.getElementById('custom-date'); 
          const noteField = document.getElementById('note');

          // Basic validation to prevent empty fields
          if (!fullNameField.value || !addressField.value || !phoneField.value || !emailField.value || !dateField.value) {
            {% comment %} alert('Please fill out all required fields.'); {% endcomment %}
            customRequestButton.disabled = false;
            customRequestButton.textContent = originalButtonText;
            return;
          }

          const customFields = { 
            'full_name': fullNameField.value.trim(), 
            'address': addressField.value.trim(), 
            'phone': phoneField.value.trim(), 
            'email': emailField.value.trim(), 
            'date': dateField.value.trim(),
            'note': noteField.value.trim()
          };

          // Fetch cart data from Shopify API
          const response = await fetch('/cart.js'); 
          const cartData = await response.json(); 
            
          const dataToLog = { 
            cart_contents: cartData, 
            custom_fields: customFields 
          }; 

          // Store data in localStorage for the thank you page
          localStorage.setItem('cartDataForThankYouPage', JSON.stringify(cartData)); 
          localStorage.setItem('customerDataForThankYouPage', JSON.stringify(customFields)); 

          const customWebhookUrl = 'https://script.google.com/macros/s/AKfycbzM3BpeKwatYO-nCLruyAmdvbn-FW-fuUFeh8m5kSQVT2zlsNsFSxqx91zgGggx0Qbicg/exec'; 
            
          // Use navigator.sendBeacon() for a reliable "fire-and-forget" request
          navigator.sendBeacon(customWebhookUrl, JSON.stringify(dataToLog));
          
          // Redirect the user immediately
          window.location.href = '/pages/thank-you'; 
            
        } catch (error) { 
          console.error('There was an error sending the data:', error); 
          alert('There was an error processing your request. Please try again.'); 
            
          // Reset the button
          customRequestButton.disabled = false; 
          customRequestButton.textContent = originalButtonText; 
        } 
      });
    }
  }); 
</script>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script type="text/javascript">
jQuery(document).ready(function(){
	var refreshId = setInterval( function() {
		$('.identixweb_checkout').attr('disabled',"true");
          if($('.uiDeliveryTimeVal').val() != '' && $('.uiDeliveryTimeVal').val() != undefined){
          $('.identixweb_checkout').removeAttr('disabled');
          clearInterval(refreshId);
      }
    },10);
});
</script>

{% comment %} REMOVE THIS IF BLOCK COMPLETELY TO STOP USING CUSTOM EVENT LOGIC {% endcomment %}
{% if has_event_service %}
  <script>
    jQuery(document).ready(function(){
      var hideAppFields = setInterval(function(){
        var $els = jQuery(".identixweb-order-delivery");
        if ($els.length > 0) {
          console.log("Force hide delivery widget");

          $els.css({
            "display": "none",
            "visibility": "hidden"
          });

          jQuery(".identixweb_checkout").prop("disabled", false);

          // stop polling once it's hidden
          clearInterval(hideAppFields);
        }
      }, 300);

      // safety stop after 10s just in case
      setTimeout(function(){ clearInterval(hideAppFields); }, 10000);
    });
  </script>

  <style>
    .identixweb-order-delivery {
      display: none !important;
      visibility: hidden !important;
    }
  </style>
{% endif %}

{% schema %}
{
  "name": "Cart page",
  "class": "page-section-spacing",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_page_title",
      "label": "Show page title",
      "default": true
    },
    {
      "type": "header",
      "content": "Cart items"
    },
    {
      "type": "checkbox",
      "id": "show_backorder_text",
      "label": "Show backorder text",
      "default": false,
      "info": "Only shows for products which use Shopify inventory tracking and are available to purchase when out of stock."
    },
    {
      "type": "select",
      "id": "show_inventory_notice",
      "label": "Show inventory notice",
      "options": [
        {
          "label": "Never",
          "value": "never"
        },
        {
          "label": "When inventory low",
          "value": "low"
        },
        {
          "label": "Always",
          "value": "always"
        }
      ],
      "default": "low"
    },
    {
      "type": "select",
      "id": "show_inventory_count",
      "label": "Show count in inventory notice",
      "options": [
        {
          "label": "Never",
          "value": "never"
        },
        {
          "label": "When inventory low",
          "value": "low"
        },
        {
          "label": "Always",
          "value": "always"
        }
      ],
      "default": "low"
    },
    {
      "type": "range",
      "id": "inventory_threshold",
      "min": 1,
      "max": 100,
      "step": 1,
      "label": "Low inventory threshold",
      "default": 10
    },
    {
      "type": "header",
      "content": "Order summary"
    },
    {
      "type": "checkbox",
      "id": "show_order_note",
      "label": "Show order note",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_tax_and_shipping",
      "label": "Show tax status and shipping policy link",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_additional_checkout_buttons",
      "label": "Show additional checkout options",
      "default": true,
      "info": "Display other gateways and quick checkout buttons. [Read more](https://help.shopify.com/en/manual/payments/accelerated-checkouts)"
    },
    {
      "type": "url",
      "id": "cart_terms_page",
      "label": "Terms and conditions link",
      "info": "Additional checkout buttons will be hidden when cart terms are shown"
    },
    {
      "type": "checkbox",
      "id": "show_continue_shopping",
      "label": "Show continue shopping link",
      "default": true
    },
    {
      "type": "url",
      "id": "continue_shopping_url",
      "label": "Continue shopping link",
      "info": "If not entered, link will be the first collection (alphabetically) of the first product in the cart."
    },
    {
      "type": "header",
      "content": "Empty cart"
    },
    {
      "type": "select",
      "id": "empty_icon",
      "label": "Icon",
      "default": "basket",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "bag",
          "label": "Bag"
        },
        {
          "value": "basket",
          "label": "Basket"
        },
        {
          "value": "cart",
          "label": "Cart"
        }
      ]
    },
    {
      "type": "text",
      "id": "empty_heading",
      "label": "Heading",
      "default": "Your cart is empty"
    },
    {
      "type": "richtext",
      "id": "empty_text",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "empty_button_text",
      "label": "Button text",
      "default": "Start shopping"
    },
    {
      "type": "url",
      "id": "empty_button_link",
      "label": "Button link",
      "default": "/collections/all"
    },
    {
      "type": "select",
      "id": "empty_button_style",
      "label": "Button style",
      "default": "primary",
      "options": [
        {
          "label": "Primary",
          "value": "primary"
        },
        {
          "label": "Secondary",
          "value": "secondary"
        },
        {
          "label": "Link",
          "value": "link"
        }
      ]
    },
    {
      "type": "header",
      "content": "Shipping rates calculator"
    },
    {
      "type": "checkbox",
      "id": "show_shipping_calculator",
      "label": "Show",
      "default": false
    },
    {
      "type": "text",
      "id": "shipping_calculator_default_country",
      "label": "Default country selection",
      "default": "United States"
    },
    {
      "type": "paragraph",
      "content": "If your customer is logged-in, the country in his default shipping address will be selected. If you are not sure about the spelling to use here, refer to your first checkout page dropdown."
    }
  ]
}
{% endschema %}
